<?php

namespace DoctrineORMModule\Proxy\__CG__\Admin\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Person extends \Admin\Entity\Person implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'fname', 'lname', 'mname', 'sex', 'mobile', 'address', 'religion', 'dob', 'country', 'state', 'lga', 'nokRel', 'nokName', 'nokMobile', 'guardian', 'student');
        }

        return array('__isInitialized__', 'id', 'fname', 'lname', 'mname', 'sex', 'mobile', 'address', 'religion', 'dob', 'country', 'state', 'lga', 'nokRel', 'nokName', 'nokMobile', 'guardian', 'student');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Person $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getStudent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudent', array());

        return parent::getStudent();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuardian(\Admin\Entity\Guardian $guardian = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuardian', array($guardian));

        return parent::setGuardian($guardian);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuardian()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuardian', array());

        return parent::getGuardian();
    }

    /**
     * {@inheritDoc}
     */
    public function setFname($fname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFname', array($fname));

        return parent::setFname($fname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFname', array());

        return parent::getFname();
    }

    /**
     * {@inheritDoc}
     */
    public function setReligion($religion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReligion', array($religion));

        return parent::setReligion($religion);
    }

    /**
     * {@inheritDoc}
     */
    public function getReligion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReligion', array());

        return parent::getReligion();
    }

    /**
     * {@inheritDoc}
     */
    public function SetDob($dob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'SetDob', array($dob));

        return parent::SetDob($dob);
    }

    /**
     * {@inheritDoc}
     */
    public function getDob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDob', array());

        return parent::getDob();
    }

    /**
     * {@inheritDoc}
     */
    public function setLname($lname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLname', array($lname));

        return parent::setLname($lname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLname', array());

        return parent::getLname();
    }

    /**
     * {@inheritDoc}
     */
    public function setMname($mname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMname', array($mname));

        return parent::setMname($mname);
    }

    /**
     * {@inheritDoc}
     */
    public function getMname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMname', array());

        return parent::getMname();
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', array($sex));

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', array());

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobile($mobile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobile', array($mobile));

        return parent::setMobile($mobile);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobile', array());

        return parent::getMobile();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\Admin\Entity\Country $country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setState(\Admin\Entity\State $state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setLga(\Admin\Entity\Lga $lga)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLga', array($lga));

        return parent::setLga($lga);
    }

    /**
     * {@inheritDoc}
     */
    public function getLga()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLga', array());

        return parent::getLga();
    }

    /**
     * {@inheritDoc}
     */
    public function setNokRel($nokRel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNokRel', array($nokRel));

        return parent::setNokRel($nokRel);
    }

    /**
     * {@inheritDoc}
     */
    public function getNokRel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNokRel', array());

        return parent::getNokRel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNokName($nokName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNokName', array($nokName));

        return parent::setNokName($nokName);
    }

    /**
     * {@inheritDoc}
     */
    public function getNokName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNokName', array());

        return parent::getNokName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNokMobile($nokMobile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNokMobile', array($nokMobile));

        return parent::setNokMobile($nokMobile);
    }

    /**
     * {@inheritDoc}
     */
    public function getNokMobile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNokMobile', array());

        return parent::getNokMobile();
    }

}
